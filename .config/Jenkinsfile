pipeline {
    agent any

    environment {
        ARTIFACT_NAME = 'agbar-fh-kafka2kafka'
    }

    options {
        timestamps()
        ansiColor('xterm')
    }

    tools {
        nodejs '20.11.1'
    }

    stages {
        stage('Checkout') {
            steps {
                cleanWs()
                checkout scm
                sh 'git fetch --unshallow || true'
            }
        }

        stage('Install Production Dependencies') {
            steps {
                sh 'yarn install'
            }
        }

        stage('Build Artifact') {
            steps {
                sh 'yarn run build:production'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'yarn install --production'
            }
        }

        stage('Prepare Artifacts') {
            matrix {
                axes {
                    axis {
                        name 'PLATFORM'
                        values 'linux', 'windows'
                    }
                }
                stages {
                    stage('Copy node_modules') {
                        steps {
                            sh '''
                            mkdir -p artifacts/${PLATFORM}/node_modules
                            cp -r node_modules/* artifacts/${PLATFORM}/node_modules/
                            '''
                        }
                    }

                    stage('Archive Artifacts') {
                        steps {
                            sh '''
                            mkdir -p ${ARTIFACT_NAME}
                            cd artifacts && tar -czvf ../${ARTIFACT_NAME}/${ARTIFACT_NAME}-${PLATFORM}.tar.gz ${PLATFORM}
                            '''
                        }
                    }
                }
            }
        }

        stage('Publish Artifacts') {
            steps {
                archiveArtifacts artifacts: "${ARTIFACT_NAME}/*.tar.gz", fingerprint: true
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
    }
}

    